#!/usr/bin/env groovy

node {
    stage('checkout') {
        checkout scm
    }

    stage('check java') {
        sh "java -version"
    }

    stage('clean') {
        sh "cd notification && chmod +x gradlew"
        sh "cd notification && ./gradlew clean --no-daemon"
    }


<<<<<<< HEAD
    stage('backend tests') {
        try {
            sh "cd notification && ./gradlew test -PnodeInstall --no-daemon"
        } catch(err) {
            throw err
        } finally {
            junit '**/build/**/TEST-*.xml'
        }
    }

    stage('packaging') {
        sh "cd notification && ./gradlew bootWar -x test -Pprod -PnodeInstall --no-daemon"
        archiveArtifacts artifacts: '**/build/libs/*.war', fingerprint: true
    }


    def dockerImage
    stage('build docker') {
        sh "cp -R notification/src/main/docker notification/build/"
        sh "cp notification/build/libs/notification-*-SNAPSHOT.war notification/build/docker/"
        dockerImage = docker.build("${env.DOCKER_USER}/ecommerce-notification", 'notification/build/docker')
    }

    stage('publish docker') {
        docker.withRegistry('https://registry.hub.docker.com', 'docker-login') {
            dockerImage.push 'latest'
        }
    }
}
